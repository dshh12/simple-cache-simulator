//obj_check(int, int*, int):                       # @obj_check(int, int*, int)
addi    sp, sp, -32
sw      ra, 28(sp)                      # 4-byte Folded Spill
sw      s0, 24(sp)                      # 4-byte Folded Spill
addi    s0, sp, 32
sw      a0, -16(s0)
sw      a1, -20(s0)
sw      a2, -24(s0)
li      a0, 0
sw      a0, -32(s0)
j       .LBB0_1
.LBB0_1:                                # =>This Inner Loop Header: Depth=1
lw      a0, -32(s0)
lw      a1, -24(s0)
bge     a0, a1, .LBB0_6
j       .LBB0_2
.LBB0_2:                                #   in Loop: Header=BB0_1 Depth=1
lw      a0, -20(s0)
lw      a1, -32(s0)
slli    a1, a1, 2
add     a0, a0, a1
lw      a0, 0(a0)
sw      a0, -28(s0)
lw      a0, -16(s0)
lw      a1, -28(s0)
bne     a0, a1, .LBB0_4
j       .LBB0_3
.LBB0_3:
li      a0, 1
sb      a0, -9(s0)
j       .LBB0_7
.LBB0_4:                                #   in Loop: Header=BB0_1 Depth=1
j       .LBB0_5
.LBB0_5:                                #   in Loop: Header=BB0_1 Depth=1
lw      a0, -32(s0)
addi    a0, a0, 1
sw      a0, -32(s0)
j       .LBB0_1
.LBB0_6:
li      a0, 0
sb      a0, -9(s0)
j       .LBB0_7
.LBB0_7:
lbu     a0, -9(s0)
lw      ra, 28(sp)                      # 4-byte Folded Reload
lw      s0, 24(sp)                      # 4-byte Folded Reload
addi    sp, sp, 32
ret
//perform_task(int, int, int, int*, int, int, int, int):              # @perform_task(int, int, int, int*, 
addi    sp, sp, -48
sw      ra, 44(sp)                      # 4-byte Folded Spill
sw      s0, 40(sp)                      # 4-byte Folded Spill
addi    s0, sp, 48
sw      a0, -12(s0)
sw      a1, -16(s0)
sw      a2, -20(s0)
sw      a3, -24(s0)
sw      a4, -28(s0)
sw      a5, -32(s0)
sw      a6, -36(s0)
sw      a7, -40(s0)
lw      a0, -12(s0)
beqz    a0, .LBB1_4
j       .LBB1_1
.LBB1_1:
li      a0, 0
sw      a0, -32(s0)
lw      a0, -20(s0)
sw      a0, -36(s0)
lw      a0, -16(s0)
lw      a1, -24(s0)
lw      a2, -28(s0)
call    obj_check(int, int*, int)
sw      a0, -44(s0)
lw      a0, -44(s0)
beqz    a0, .LBB1_3
j       .LBB1_2
.LBB1_2:
li      a0, 1
sw      a0, -40(s0)
j       .LBB1_3
.LBB1_3:
li      a0, 5
sw      a0, -32(s0)
lw      a0, -20(s0)
not     a0, a0
sw      a0, -36(s0)
li      a0, 0
sw      a0, -40(s0)
j       .LBB1_4
.LBB1_4:
lw      ra, 44(sp)                      # 4-byte Folded Reload
lw      s0, 40(sp)                      # 4-byte Folded Reload
addi    sp, sp, 48
ret
